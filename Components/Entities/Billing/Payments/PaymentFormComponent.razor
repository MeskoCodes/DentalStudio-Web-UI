@using MudBlazor
@inherits PaymentFormViewModel

@if (PaymentCreate != null && PaymentCreate.PaymentId == 0)
{
    <MudDialog Style="width:inherit">
        <DialogContent>
            <MudCard>
                <MudCardContent>
                    <MudItem xs="12">


                        <MudTextField Label="Amount" Variant="Variant.Outlined" Immediate=true Required RequiredError=@ValidationMessage
                                      @bind-Value="PaymentCreate.Amount" For="@(() => PaymentCreate.Amount)" />


                        <MudTextField Label="Payment Date" Variant="Variant.Outlined" Immediate=true Required RequiredError=@ValidationMessage
                                      @bind-Value="PaymentCreate.PaymentDate" For="@(() => PaymentCreate.PaymentDate)" />


                        <MudSelect Label="Payment Method" Variant="Variant.Outlined" Immediate="true" Required="true"
                                   @bind-Value="PaymentCreate.PaymentMethod">
                            @foreach (var status in PaymentOptions)
                            {
                                <MudSelectItem Value="@status">@status</MudSelectItem>
                            }
                        </MudSelect>

                        <MudTextField Label="Invoice ID" Variant="Variant.Outlined" Immediate=true Required RequiredError=@ValidationMessage
                                      @bind-Value="PaymentCreate.InvoiceId" For="@(() => PaymentCreate.InvoiceId)" />


                    </MudItem>
                </MudCardContent>
            </MudCard>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Tertiary" Variant="Variant.Filled" OnClick="() => Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Disabled="@Disabled" Variant="Variant.Filled" Color="Color.Tertiary" OnClick="() => CreateOrUpdate()">Save</MudButton>
        </DialogActions>
    </MudDialog>
}
else
{
    <MudDialog Style="width:inherit">
        <DialogContent>
            <MudCard>
                <MudCardContent>
                    <MudItem xs="12">
                        <MudTextField Label="Amount" Variant="Variant.Outlined" Immediate=true Required RequiredError=@ValidationMessage
                                      @bind-Value="PaymentUpdate.Amount" For="@(() => PaymentUpdate.Amount)" />

                        <MudTextField Label="Payment Date" Variant="Variant.Outlined" Immediate=true Required RequiredError=@ValidationMessage
                                      @bind-Value="PaymentUpdate.PaymentDate" For="@(() => PaymentUpdate.PaymentDate)" />


                        <MudSelect Label="Payment Method" Variant="Variant.Outlined" Immediate="true" Required="true"
                                   @bind-Value="PaymentUpdate.PaymentMethod">
                            @foreach (var status in PaymentOptions)
                            {
                                <MudSelectItem Value="@status">@status</MudSelectItem>
                            }
                        </MudSelect>

                        <MudTextField Label="Invoice ID" Variant="Variant.Outlined" Immediate=true Required RequiredError=@ValidationMessage
                                      @bind-Value="PaymentUpdate.InvoiceId" For="@(() => PaymentUpdate.InvoiceId)" />

                    </MudItem>
                </MudCardContent>
            </MudCard>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Tertiary" Variant="Variant.Filled" OnClick="() => Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Disabled="@Disabled" Variant="Variant.Filled" Color="Color.Tertiary" OnClick="() => CreateOrUpdate()">Save</MudButton>
        </DialogActions>
    </MudDialog>
}
@code {
    private List<string> PaymentOptions = new()
    {
        "Card",
        "Cash",
        "Check",
        "Bank Transfer",
        "Crypto"
      
    };

}